package main

import (
	"log"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	echoSwagger "github.com/swaggo/echo-swagger"

	_ "github.com/afafpratama/ideaimajitest/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/afafpratama/ideaimajitest/api"
	"github.com/afafpratama/ideaimajitest/storage"
)

// @title Idea Imaji Test Swagger API
// @version 1.0
// @description This is a Idea Imaji Test server.

// @host localhost:3000

func main() {
	// Initiate swagger server
	go func() {
		e := echo.New()

		e.Use(middleware.Logger())
		e.Use(middleware.Recover())

		// Enable CORS
		e.Use(middleware.CORSWithConfig(middleware.CORSConfig{
			AllowOrigins: []string{"*"},
			AllowMethods: []string{echo.GET, echo.HEAD, echo.PUT, echo.PATCH, echo.POST, echo.DELETE},
			AllowHeaders: []string{echo.HeaderOrigin, echo.HeaderContentType, echo.HeaderAccept, echo.HeaderAuthorization},
		}))

		e.GET("/swagger/*", echoSwagger.WrapHandler)

		// Middleware debug log
		e.Use(func(next echo.HandlerFunc) echo.HandlerFunc {
			return func(c echo.Context) error {
				log.Println("Handling request:", c.Request().URL.Path)
				return next(c)
			}
		})

		e.Logger.Fatal(e.Start(":1323"))
	}()

	// Initiate progres server
	store, err := storage.NewPostgresStore()
	if err != nil {
		log.Fatal(err)
	}

	if err := store.Init(); err != nil {
		log.Fatal(err)
	}

	// Initiate API Server
	server := api.NewAPIServer(":3000", store)
	go server.Run()

	// Block forever
	select {}
}
